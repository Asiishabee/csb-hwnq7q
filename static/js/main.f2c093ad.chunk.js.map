{"version":3,"sources":["context/todoContext.tsx","context/themeContext.tsx","components/Todo.tsx","containers/Todos.tsx","components/AddTodo.tsx","components/ThemeWrapper.tsx","App.tsx","index.tsx"],"names":["TodoContext","React","TodoProvider","children","id","title","description","status","todos","setTodos","Provider","value","saveTodo","todo","newTodo","Math","random","updateTodo","filter","ThemeContext","ThemeProvider","themeMode","setThemeMode","theme","changeTheme","Todo","checkTodo","className","onClick","Todos","map","key","AddTodo","formData","setFormData","handleForm","e","currentTarget","onSubmit","preventDefault","handleSaveTodo","htmlFor","onChange","type","disabled","undefined","ThemeWrapper","useContext","data-theme","name","event","target","App","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.f2c093ad.chunk.js","sourcesContent":["import * as React from 'react';\r\n\r\nimport { TodoContextType, ITodo } from '../@types/todo';\r\n\r\nexport const TodoContext = React.createContext<TodoContextType | null>(null);\r\n\r\nconst TodoProvider: React.FC<React.ReactNode> = ({ children }) => {\r\n  const [todos, setTodos] = React.useState<ITodo[]>([\r\n    {\r\n      id: 1,\r\n      title: 'post 1',\r\n      description: 'this is a description',\r\n      status: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'post 2',\r\n      description: 'this is a description',\r\n      status: true,\r\n    },\r\n  ]);\r\n\r\n  const saveTodo = (todo: ITodo) => {\r\n    const newTodo: ITodo = {\r\n      id: Math.random(), // not really unique - but fine for this example\r\n      title: todo.title,\r\n      description: todo.description,\r\n      status: false,\r\n    };\r\n    setTodos([...todos, newTodo]);\r\n  };\r\n\r\n  const updateTodo = (id: number) => {\r\n    todos.filter((todo: ITodo) => {\r\n      if (todo.id === id) {\r\n        todo.status = true;\r\n        setTodos([...todos]);\r\n      }\r\n    });\r\n  };\r\n\r\n  return <TodoContext.Provider value={{ todos, saveTodo, updateTodo }}>{children}</TodoContext.Provider>;\r\n};\r\n\r\nexport default TodoProvider;\r\n","import * as React from \"react\";\nimport { Theme, ThemeContextType } from \"../@types/theme\";\n\nexport const ThemeContext = React.createContext<ThemeContextType | null>(null);\n\nconst ThemeProvider: React.FC<React.ReactNode> = ({ children }) => {\n  const [themeMode, setThemeMode] = React.useState<Theme>(\"dark\");\n  return (\n    <ThemeContext.Provider\n      value={{ theme: themeMode, changeTheme: setThemeMode }}\n    >\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeProvider;\n","import * as React from 'react';\r\nimport { ITodo } from '../@types/todo';\r\n\r\ntype Props = {\r\n  todo: ITodo;\r\n  updateTodo: (id: number) => void;\r\n};\r\n\r\nconst Todo: React.FC<Props> = ({ todo, updateTodo }) => {\r\n  const checkTodo: string = todo.status ? `line-through` : '';\r\n  return (\r\n    <div className=\"Card\">\r\n      <div className=\"Card--text\">\r\n        <h1 className={checkTodo}>{todo.title}</h1>\r\n        <span className={checkTodo}>{todo.description}</span>\r\n      </div>\r\n      <button onClick={() => updateTodo(todo.id)} className={todo.status ? `hide-button` : 'Card--button'}>\r\n        Complete\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import * as React from 'react';\r\nimport { TodoContextType, ITodo } from '../@types/todo';\r\nimport { TodoContext } from '../context/todoContext';\r\nimport Todo from '../components/Todo';\r\n\r\nconst Todos = () => {\r\n  const { todos, updateTodo } = React.useContext(TodoContext) as TodoContextType;\r\n  return (\r\n    <>\r\n      {todos.map((todo: ITodo) => (\r\n        <Todo key={todo.id} updateTodo={updateTodo} todo={todo} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","import * as React from 'react';\r\nimport { TodoContext } from '../context/todoContext';\r\nimport { TodoContextType, ITodo } from '../@types/todo';\r\n\r\nconst AddTodo: React.FC = () => {\r\n  const { saveTodo } = React.useContext(TodoContext) as TodoContextType;\r\n  const [formData, setFormData] = React.useState<ITodo | {}>();\r\n\r\n  const handleForm = (e: React.FormEvent<HTMLInputElement>): void => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.currentTarget.id]: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  const handleSaveTodo = (e: React.FormEvent, formData: ITodo | any) => {\r\n    e.preventDefault();\r\n    saveTodo(formData);\r\n  };\r\n\r\n  return (\r\n    <form className=\"Form\" onSubmit={(e) => handleSaveTodo(e, formData)}>\r\n      <div>\r\n        <div>\r\n          <label htmlFor=\"name\">Title</label>\r\n          <input onChange={handleForm} type=\"text\" id=\"title\" />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"description\">Description</label>\r\n          <input onChange={handleForm} type=\"text\" id=\"description\" />\r\n        </div>\r\n      </div>\r\n      <button disabled={formData === undefined ? true : false}>Add Todo</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTodo;\r\n","import React from 'react';\nimport { ThemeContextType, Theme } from '../@types/theme';\nimport { ThemeContext } from '../context/themeContext';\n\nconst ThemeWrapper: React.FC = ({ children }) => {\n  const { theme, changeTheme } = React.useContext(ThemeContext) as ThemeContextType;\n\n  const handleThemeChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    changeTheme(event.target.value as Theme);\n  };\n  return (\n    <div className=\"Theme-wrapper\" data-theme={theme}>\n      <select className=\"Theme-toggler\" name=\"toggleTheme\" onChange={handleThemeChange}>\n        <option value=\"light\">Light</option>\n        <option value=\"dark\">Dark</option>\n      </select>\n      {children}\n    </div>\n  );\n};\n\nexport default ThemeWrapper;\n","import * as React from 'react';\n\nimport TodoProvider from './context/todoContext';\nimport ThemeProvider from './context/themeContext';\nimport Todos from './containers/Todos';\nimport AddTodo from './components/AddTodo';\nimport ThemeWrapper from './components/ThemeWrapper';\nimport './styles.css';\n\nexport default function App() {\n  return (\n    <ThemeProvider>\n      <TodoProvider>\n        <ThemeWrapper>\n          <main className=\"App\">\n            <h1>My Todos</h1>\n            <AddTodo />\n            <Todos />\n          </main>\n        </ThemeWrapper>\n      </TodoProvider>\n    </ThemeProvider>\n  );\n}\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}